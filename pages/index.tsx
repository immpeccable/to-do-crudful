import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import Header from "./components/Header";
import {
  Button,
  Grid,
  ListItemText,
  ListItemAvatar,
  Avatar,
  IconButton,
  Typography,
  List,
  Checkbox,
} from "@mui/material";
import { Task } from "./types";
import React from "react";
import { TaskForm } from "./components/TaskForm";
import ListItem from "@mui/material/ListItem";
import { Folder, Delete, Edit } from "@mui/icons-material";
import { deleteTask, patchTask } from "./api";
import { useTaskController } from "./controller";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const {
    isPopupOpen,
    editTask,
    createTask,
    tasks,
    onCancel,
    reverseCompleted,
    onSave,
    editedTask,
    saveText,
  } = useTaskController();

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="mt-12 flex flex-col items-center">
        <Button
          onClick={createTask}
          className="bg-blue-500"
          color="primary"
          variant="contained"
        >
          Create Task
        </Button>
      </div>
      <Grid item xs={12} md={6}>
        <List dense={true}>
          {tasks.map((task: Task) => (
            <ListItem
              key={task.id}
              secondaryAction={
                <div className="flex flex-row gap-4">
                  <IconButton
                    onClick={() => editTask(task)}
                    edge="end"
                    aria-label="delete"
                  >
                    <Edit />
                  </IconButton>
                  <IconButton
                    onClick={() => deleteTask(task.id!)}
                    edge="end"
                    aria-label="delete"
                  >
                    <Delete />
                  </IconButton>
                </div>
              }
            >
              <ListItemAvatar>
                <Checkbox
                  defaultChecked={task.isCompleted}
                  onClick={() => reverseCompleted(task)}
                />
              </ListItemAvatar>
              <ListItemText primary={task.title} secondary={task.details} />
              <ListItemText primary={`Due: ${task.due?.slice(0, 10)}`} />
            </ListItem>
          ))}
        </List>
      </Grid>

      {isPopupOpen && (
        <>
          <div
            onClick={onCancel}
            className="fixed w-full h-full bg-black top-0 bg-opacity-20 z-30"
          ></div>
          <TaskForm
            onCancel={onCancel}
            onSave={onSave}
            editedTask={editedTask}
            saveText={saveText}
          />
        </>
      )}
    </>
  );
}
